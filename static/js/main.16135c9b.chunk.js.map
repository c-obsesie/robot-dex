{"version":3,"sources":["components/card-component/card.component.jsx","components/card-list/card-list.component.js","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","class","Component","ReactDOM","render","document","getElementById"],"mappings":"qRAGaA,G,YAAO,SAAAC,GAClB,OAAQ,yBAAKC,UAAU,kBACrB,yBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAClF,4BAAKL,EAAMG,QAAQG,MACnB,2BAAIN,EAAMG,QAAQI,UCHPC,EAAW,SAACR,GAEvB,OACE,yBAAKC,UAAU,aACZD,EAAMS,SAASC,KAAI,SAACP,GAAD,OACnB,kBAAC,EAAD,CAAMQ,IAAKR,EAAQC,GAAID,QAASA,SCN1BS,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,yBAAKb,UAAU,oBACf,2BAAOA,UAAU,SACfY,YAAaA,EACbE,KAAK,SACLC,SAAUF,OCiCCG,G,wDAnCb,aAAe,IAAD,8BACZ,gBAcFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAQrC,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACvCA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,yBAAK/B,UAAU,OACf,wBAAIiC,MAAM,SAAV,iBACE,kBAAC,EAAD,CAAWrB,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,kBAAC,EAAD,CAAUL,SAAUqB,S,GA/BVK,cCAlBC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.16135c9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../card-component/card.styles.css'\r\n\r\nexport const Card = props => {\r\n  return (<div className='card-container'>\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2/size=180x180`} alt=\"monster\"/>\r\n  <h1>{props.monster.name}</h1>\r\n  <p>{props.monster.email}</p>\r\n  </div>)\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\nimport {Card} from '../card-component/card.component'\r\n\r\nexport const CardList = (props) => {\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n       <Card key={monster.id} monster={monster}/>\r\n\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport '../search-box/searchbox.style.css'\r\n\r\nexport const SearchBox=({placeholder, handleChange})=>(\r\n  <div className=\"search-container\">\r\n  <input className=\"search\"\r\n    placeholder={placeholder}\r\n    type=\"search\"\r\n    onChange={handleChange}\r\n  /></div>\r\n\r\n)\r\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n\n  }\n  componentDidMount() { // life cycle methods\n    fetch(\"https://jsonplaceholder.typicode.com/users\") //recieve promise\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange=(e)=>{\n    this.setState({ searchField: e.target.value })\n    \n  } \n\n  render() {\n    const { monsters, searchField } = this.state; // similar with const monsters=this.state.monsters const searchField=this.state.searchField\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\"> \n      <h1 class=\"label\">React Search </h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}></SearchBox>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}